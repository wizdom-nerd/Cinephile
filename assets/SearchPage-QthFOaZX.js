import{l as v,m as f,n as y,h as u,p as k,r as S,o as n,c as i,b as s,w as h,v as x,F as _,j as $,k as b,q as w,u as B,f as L,a as V}from"./index-y0uQzEk5.js";const q=v({id:"Searching",state:()=>({url:"https://api.themoviedb.org/3/search/multi",searching:null,search:""}),actions:{async getSearch(){if(this.search)try{const e=(await y.get(`${this.url}?api_key=${f}&include_adult=true&language=en-US&query=${this.search}`)).data.results;this.searching=e,console.log(e)}catch(a){console.log("Произошла ошибка при поиске",a)}else this.searching=null}},getters:{}}),z={class:"search"},C={class:"container"},D={class:"list"},F={class:"container"},I={class:"list__img",alt:""},N={__name:"Search",setup(a){const e=q(),p=((r,c)=>{let t=null;return()=>{t&&clearInterval(t),t=setTimeout(()=>{r()},c)}})(e.getSearch,10),m=u(()=>e.searching),l=u({get:()=>e.search,set:r=>{e.search=r,p()}});return(r,c)=>{const t=k("RouterLink"),g=S("lazy");return n(),i(_,null,[s("div",z,[s("div",C,[h(s("input",{type:"text",placeholder:"Look for movies or series...",class:"search__input","onUpdate:modelValue":c[0]||(c[0]=o=>l.value=o)},null,512),[[x,l.value]])])]),s("div",D,[s("div",F,[(n(!0),i(_,null,$(m.value,o=>(n(),b(t,{to:"/",key:o.id},{default:w(()=>[h(s("img",I,null,512),[[g,B(L)+o.poster_path]])]),_:2},1024))),128))])])],64)}}},R={class:"main"},U={__name:"SearchPage",setup(a){return(e,d)=>(n(),i("main",R,[V(N)]))}};export{U as default};
